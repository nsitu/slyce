This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2024-11-04T22:06:16.172Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
.gitignore
api/crud.js
database.js
index.js
models/ItemModel.js
package.json
public/assets/adopted.svg
public/assets/az.svg
public/assets/birthday.svg
public/assets/cake.svg
public/assets/calendar.svg
public/assets/cat.svg
public/assets/dragdrop.svg
public/assets/dry.svg
public/assets/folder.svg
public/assets/heart.svg
public/assets/load.svg
public/assets/logo.svg
public/assets/mixed.svg
public/assets/open.svg
public/assets/paw.svg
public/assets/photo.svg
public/assets/upload.svg
public/assets/wet.svg
public/crud.js
public/form.css
public/index.html
public/script.js
public/style.css

================================================================
Repository Files
================================================================

================
File: .gitignore
================
# .gitignore
# This file tells Git which files or folders to ignore in your project  

# in the context of Codeserver, Readme contains sensitive info
README.md

# the filebrowser in CodeServer does not need to be committed to version control
filebrowser.db

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache (https://parceljs.org/)
.cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

#DynamoDB Local files 
.dynamodb/

================
File: api/crud.js
================
// This module defines a set of CRUD endpoints for Items
// NOTE: image file uploads are handled separately.


import {mongoReady} from '../database.js'

// Import the Item schema
import {Item} from "../models/ItemModel.js"  

// Import Express so we can make API endpoints
import express from 'express' 
// active the express Router
const api = express.Router()   

// CREATE ITEM (ENDPOINT)
// this endpoint looks for JSON data in the body of the request and saves a new item to MongoDB
api.post('/item', mongoReady, async (req, res) => { 
  console.log()
  try{
    delete req.body._id // don't include the _id on a new item (Mongo will create it automatically)
    const item = await Item.create(req.body)
    res.send(item) 
  }
  catch(err){
    res.status(500).send(err)
  }
})


// READ ITEMS (ENDPOINT)
api.get('/items', mongoReady, async (req, res) => {  
  try{
    // a empty filter means "find everything"
    let filter = {}   
    // let's adjust sorting based on user input.
    let sort = {} 
    if (req.query.sort == "birthDate"){
      sort.birthDate = "ascending"
    }
    if (req.query.sort == "name"){
      sort.name = "descending"
    } 
    const items = await Item.find(filter).sort(sort)  
    res.send(items)
  }
  catch(err){
    res.status(500).send(err)
  } 
})


// READ SINGLE ITEM (ENDPOINT)  
api.get('/item/:id', mongoReady, async (req, res) => {  
  try{
    const filter = {_id: req.params.id}
    const item = await Item.findOne(filter)  
    res.send(item)
  }
  catch(err){
    res.status(500).send(err)
  } 
}) 

//UPDATE ITEM (ENDPOINT)
api.put('/item/:id', mongoReady, async (req, res) => {    
  try{
    const filter = {_id: req.params.id}
    const update = req.body
    const options = {returnDocument :'after'}   // default is 'before'   
    const item = await Item.findOneAndReplace(filter, update, options) 
    res.send(item)
  }
  catch(err){
    res.status(500).send(err)
  } 
}) 

// DELETE ITEM (ENDPOINT)
api.delete('/item/:id', mongoReady, async (req, res) => {
  try{
    const filter = {_id:req.params.id} 
    // remove item from database
    const item = await Item.findOneAndDelete(filter)  
    res.send({status :"Item deleted."})   
  }
  catch(err){  
    console.log(err)
    res.status(500).send(err) 
  }
})

export { api as crudEndpoints }

================
File: database.js
================
// This  module defines a database connection to MongoDB
  

/* Connect to MongoDB:
To connect, you must add a MongoDB connection string
as an environment variable (i.e. Replit "Secret")
The name/key of the environment variable must be "MONGODB"
The value of the variable must be a valid MongoDB connection string. 
You can locate the string in your MongoDB Atlas dashboard.
See also: https://account.mongodb.com/account/login  
See also: https://mongoosejs.com/docs/connections.html */ 
 
import mongoose from 'mongoose'  
mongoose.connect( process.env.MONGODB )
  .then(mongoose => {   
    console.log(`Mongoose ${mongoose.version} connected to MongoDB.`)
    console.log(`Host: ${mongoose.connection.host}`)
  })
  .catch(error => handleError(error)); 

const handleError = (error)=>{
  console.log("MongoDB connection failed.")
  console.log(error.message)
  if (process.env.MONGODB){
    console.log("MONGODB="+process.env.MONGODB) 
  }    
  else{
    console.log("MONGODB environment variable not found.") 
  }
}
 
function mongoReady(req, res, next) { 
    if (mongoose.connection.readyState !== 1) {
      return res.status(503).send()
    }
    next();
}

export {mongoReady}

================
File: index.js
================
// Express is a framework for building APIs and web apps
// See also: https://expressjs.com/
import express from 'express'  
const app = express()

// CORS middleware add CORS headers to our endpoints 
// This will allow us to use the API on any domain. 
// See also: https://www.npmjs.com/package/cors
// Tell our Express app to add CORS headers
import cors from 'cors'
app.use(cors())

// serve up the frontend (documentation)
app.use(express.static( 'public'))
// Enable express to parse JSON data
app.use(express.json()) 

// Our API is defined in separate modules to keep things tidy.
// Let's import our API endpoints and activate them.
// Note that the '/api' prefix is important here:

// Here are the basic CRUD endpoints for image metadata
import { crudEndpoints } from './api/crud.js'
app.use('/api', crudEndpoints)
 
// Express starts listening   
app.listen(process.env.PORT,() => console.log("Express is Live."))

================
File: models/ItemModel.js
================
import mongoose from 'mongoose'
  
// To make your own Schema, check the documentation Here:
// https://mongoosejs.com/docs/guide.html#definition
// You can also try a Schema Generator like this one:
// https://bender.sheridanc.on.ca/system-design/schema-generator 

const schema = new mongoose.Schema({ 
  "name": { "type": "String" },
  "breed": { "type": "String"},
  "primaryColor": { "type": "String"},
  "secondaryColor": { "type": "String" },
  "description": { "type": "String", required: true },
  "playfulness": { "type": "Number" },
  "appetite": { "type": "Number" },
  "food": { "type": "String", default : "mixed" },
  "birthDate": { "type": "Date" },
  "isAdopted": { "type": "Boolean" },
  "microchip": { "type": "Number", required: true }
}) 

const Item = mongoose.model('Items', schema);
  

export { Item };

================
File: package.json
================
{
  "name": "sikkemha",
  "version": "1.0.0",
  "description": "This is a Shareable NodeJS workspace for use by Sheridan IXD students.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node --env-file=.env index.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "module",
  "dependencies": {
    "busboy": "^1.6.0",
    "cors": "^2.8.5",
    "express": "^4.21.1",
    "mongoose": "^8.7.3",
    "sharp": "^0.33.5"
  }
}

================
File: public/assets/adopted.svg
================
<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 576 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M47.6 300.4L228.3 469.1c7.5 7 17.4 10.9 27.7 10.9s20.2-3.9 27.7-10.9l2.6-2.4C267.2 438.6 256 404.6 256 368c0-97.2 78.8-176 176-176c28.3 0 55 6.7 78.7 18.5c.9-6.5 1.3-13 1.3-19.6v-5.8c0-69.9-50.5-129.5-119.4-141C347 36.5 300.6 51.4 268 84L256 96 244 84c-32.6-32.6-79-47.5-124.6-39.9C50.5 55.6 0 115.2 0 185.1v5.8c0 41.5 17.2 81.2 47.6 109.5zM576 368a144 144 0 1 0 -288 0 144 144 0 1 0 288 0zm-76.7-43.3c6.2 6.2 6.2 16.4 0 22.6l-72 72c-6.2 6.2-16.4 6.2-22.6 0l-40-40c-6.2-6.2-6.2-16.4 0-22.6s16.4-6.2 22.6 0L416 385.4l60.7-60.7c6.2-6.2 16.4-6.2 22.6 0z"></path></svg>

================
File: public/assets/az.svg
================
<svg xmlns="http://www.w3.org/2000/svg" stroke="currentColor" fill="#ffffff" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em"><path d="M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352zm240-64H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 446.37V464a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 321.63V304a16 16 0 0 0-16-16zm31.06-85.38l-59.27-160A16 16 0 0 0 372.72 32h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 224h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 224H432a16 16 0 0 0 15.06-21.38zM335.61 144L352 96l16.39 48z"/></svg>

================
File: public/assets/birthday.svg
================
<svg   fill="#ffffff" stroke-width="0" viewBox="0 0 24 24" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path fill="none" d="M0 0h24v24H0z"></path><path d="M12 6a2 2 0 0 0 2-2c0-.38-.1-.73-.29-1.03L12 0l-1.71 2.97c-.19.3-.29.65-.29 1.03 0 1.1.9 2 2 2zm4.6 9.99-1.07-1.07-1.08 1.07c-1.3 1.3-3.58 1.31-4.89 0l-1.07-1.07-1.09 1.07C6.75 16.64 5.88 17 4.96 17c-.73 0-1.4-.23-1.96-.61V21c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-4.61c-.56.38-1.23.61-1.96.61-.92 0-1.79-.36-2.44-1.01zM18 9h-5V7h-2v2H6c-1.66 0-3 1.34-3 3v1.54c0 1.08.88 1.96 1.96 1.96.52 0 1.02-.2 1.38-.57l2.14-2.13 2.13 2.13c.74.74 2.03.74 2.77 0l2.14-2.13 2.13 2.13c.37.37.86.57 1.38.57 1.08 0 1.96-.88 1.96-1.96V12C21 10.34 19.66 9 18 9z"></path></svg>

================
File: public/assets/cake.svg
================
<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M448 384c-28.02 0-31.26-32-74.5-32-43.43 0-46.825 32-74.75 32-27.695 0-31.454-32-74.75-32-42.842 0-47.218 32-74.5 32-28.148 0-31.202-32-74.75-32-43.547 0-46.653 32-74.75 32v-80c0-26.5 21.5-48 48-48h16V112h64v144h64V112h64v144h64V112h64v144h16c26.5 0 48 21.5 48 48v80zm0 128H0v-96c43.356 0 46.767-32 74.75-32 27.951 0 31.253 32 74.75 32 42.843 0 47.217-32 74.5-32 28.148 0 31.201 32 74.75 32 43.357 0 46.767-32 74.75-32 27.488 0 31.252 32 74.5 32v96zM96 96c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40z"></path></svg>

================
File: public/assets/calendar.svg
================
<svg xmlns="http://www.w3.org/2000/svg" stroke="currentColor" fill="#ffffff" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em"><path d="M148 288h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm108-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 96v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96-260v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z"/></svg>

================
File: public/assets/cat.svg
================
<svg xmlns="http://www.w3.org/2000/svg" stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 256 256" height="1em" width="1em"><path d="M224,48v88c0,48.6-43,88-96,88s-96-39.4-96-88V48a8,8,0,0,1,13.66-5.66L67.6,67.6h0a102.87,102.87,0,0,1,120.8,0h0l21.94-25.24A8,8,0,0,1,224,48Z" opacity="0.2"/><path d="M96,140a12,12,0,1,1-12-12A12,12,0,0,1,96,140Zm76-12a12,12,0,1,0,12,12A12,12,0,0,0,172,128Zm60-80v88c0,52.93-46.65,96-104,96S24,188.93,24,136V48A16,16,0,0,1,51.31,36.69c.14.14.26.27.38.41L69,57a111.22,111.22,0,0,1,118.1,0L204.31,37.1c.12-.14.24-.27.38-.41A16,16,0,0,1,232,48Zm-16,0-21.56,24.8A8,8,0,0,1,183.63,74,88.86,88.86,0,0,0,168,64.75V88a8,8,0,1,1-16,0V59.05a97.43,97.43,0,0,0-16-2.72V88a8,8,0,1,1-16,0V56.33a97.43,97.43,0,0,0-16,2.72V88a8,8,0,1,1-16,0V64.75A88.86,88.86,0,0,0,72.37,74a8,8,0,0,1-10.81-1.17L40,48v88c0,41.66,35.21,76,80,79.67V195.31l-13.66-13.66a8,8,0,0,1,11.32-11.31L128,180.68l10.34-10.34a8,8,0,0,1,11.32,11.31L136,195.31v20.36c44.79-3.69,80-38,80-79.67Z"/></svg>

================
File: public/assets/dragdrop.svg
================
<svg xmlns="http://www.w3.org/2000/svg" stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" height="1em" width="1em"><g><path fill="none" d="M0 0h24v24H0z"/><path fill-rule="nonzero" d="M16 13l6.964 4.062-2.973.85 2.125 3.681-1.732 1-2.125-3.68-2.223 2.15L16 13zm-2-7h2v2h5a1 1 0 0 1 1 1v4h-2v-3H10v10h4v2H9a1 1 0 0 1-1-1v-5H6v-2h2V9a1 1 0 0 1 1-1h5V6zM4 14v2H2v-2h2zm0-4v2H2v-2h2zm0-4v2H2V6h2zm0-4v2H2V2h2zm4 0v2H6V2h2zm4 0v2h-2V2h2zm4 0v2h-2V2h2z"/></g></svg>

================
File: public/assets/dry.svg
================
<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M10 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM6 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-4 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"></path></svg>

================
File: public/assets/folder.svg
================
<svg xmlns="http://www.w3.org/2000/svg"   fill="#ffffff"  viewBox="0 0 512 512" height="1em" width="1em"><path d="M464,128H272L208,64H48A48,48,0,0,0,0,112V400a48,48,0,0,0,48,48H464a48,48,0,0,0,48-48V176A48,48,0,0,0,464,128ZM359.5,296a16,16,0,0,1-16,16h-64v64a16,16,0,0,1-16,16h-16a16,16,0,0,1-16-16V312h-64a16,16,0,0,1-16-16V280a16,16,0,0,1,16-16h64V200a16,16,0,0,1,16-16h16a16,16,0,0,1,16,16v64h64a16,16,0,0,1,16,16Z"/></svg>

================
File: public/assets/heart.svg
================
<svg xmlns="http://www.w3.org/2000/svg" stroke="currentColor" fill="#ffffff" stroke-width="0" viewBox="0 0 16 16" height="1em" width="1em"><path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z"/></svg>

================
File: public/assets/load.svg
================
<svg version="1.1" id="L4" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 100 100" enable-background="new 0 0 0 0" xml:space="preserve">
  <circle fill="#000" stroke="none" cx="6" cy="50" r="6">
    <animate attributeName="opacity" dur="1s" values="0;1;0" repeatCount="indefinite" begin="0.1"></animate>    
  </circle>
  <circle fill="#000" stroke="none" cx="26" cy="50" r="6">
    <animate attributeName="opacity" dur="1s" values="0;1;0" repeatCount="indefinite" begin="0.2"></animate>       
  </circle>
  <circle fill="#000" stroke="none" cx="46" cy="50" r="6">
    <animate attributeName="opacity" dur="1s" values="0;1;0" repeatCount="indefinite" begin="0.3"></animate>     
  </circle>
</svg>

================
File: public/assets/logo.svg
================
<svg xmlns="http://www.w3.org/2000/svg"  stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em"> 
    <symbol id="catIcon">
        <path d="M463.46 37.008l-30.694 50.738-7.043-2.28c-27.146-8.797-71.525-7.15-97.6.11L321.22 87.5l-28.68-48.543c-33.63 69.254-32.264 117.56-14.79 148.574 18.71 33.208 57.378 49.09 99.117 48.574 48.743-.606 88.968-19.665 107.035-54.194 16.918-32.332 15.684-80.456-20.443-144.902zM323.935 137.594c18.45.1 29.36 15.338 31.462 36.644-37.11 17.91-53.963 3.398-61.173-26.545 11.382-7.063 21.324-10.144 29.71-10.1zm109.26 0c8.385-.045 18.328 3.036 29.71 10.1-7.21 29.942-24.064 44.454-61.174 26.544 2.104-21.306 13.014-36.545 31.463-36.644zm-293.553 50.96c-1.226-.01-2.446-.003-3.66.018-30.175.536-56.142 10.59-75.743 26.574-43.444 35.43-57.27 100.752-12.824 166.192 20.293 33.995 44.432 54.24 70.797 64.187 32.85 12.395 66.655 8.823 99.94 4.114 33.284-4.71 65.854-10.63 96.896-8.42 31.04 2.212 62.09 10.18 90.505 41.165 19.374 21.125 46.887-1.627 23.82-24.156-35.024-34.207-72.527-47.42-109.377-50.04-36.85-2.62-72.2 4.698-104.207 9.228-32.007 4.53-60.272 6.552-84.558-2.61-14.39-5.43-28.308-14.802-41.55-31.142h351.744c13.673-52.293 14.867-106.368 1.873-142.072-19.765 8.49-42.412 12.9-66.2 13.197h-.002c-29.85.37-59.458-6.925-82.907-22.823-4.647 3.012-9.407 6.23-14.292 9.685l-5.734 4.057-5.49-4.382c-46.63-37.2-91.028-52.48-129.03-52.773z"/>
    </symbol>
</svg>

================
File: public/assets/mixed.svg
================
<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M20 7a2 2 0 0 1 2 2v.5c0 1.694 -2.247 5.49 -3.983 6.983l-.017 .013v.504a2 2 0 0 1 -1.85 1.995l-.15 .005h-8a2 2 0 0 1 -2 -2v-.496l-.065 -.053c-1.76 -1.496 -3.794 -4.965 -3.928 -6.77l-.007 -.181v-.5a2 2 0 0 1 2 -2z"></path></svg>

================
File: public/assets/open.svg
================
<svg xmlns="http://www.w3.org/2000/svg" stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" height="1em" width="1em"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M19 19H5V5h7V3H5a2 2 0 00-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z"/></svg>

================
File: public/assets/paw.svg
================
<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M490.39 182.75c-5.55-13.19-14.77-22.7-26.67-27.49l-.16-.06a46.46 46.46 0 0 0-17-3.2h-.64c-27.24.41-55.05 23.56-69.19 57.61-10.37 24.9-11.56 51.68-3.18 71.64 5.54 13.2 14.78 22.71 26.73 27.5l.13.05a46.53 46.53 0 0 0 17 3.2c27.5 0 55.6-23.15 70-57.65 10.24-24.87 11.37-51.63 2.98-71.6zM381.55 329.61c-15.71-9.44-30.56-18.37-40.26-34.41C314.53 250.8 298.37 224 256 224s-58.57 26.8-85.39 71.2c-9.72 16.06-24.6 25-40.36 34.48-18.07 10.86-36.74 22.08-44.8 44.16a66.93 66.93 0 0 0-4.65 25c0 35.95 28 65.2 62.4 65.2 17.75 0 36.64-6.15 56.63-12.66 19.22-6.26 39.09-12.73 56.27-12.73s37 6.47 56.15 12.73C332.2 457.85 351 464 368.8 464c34.35 0 62.3-29.25 62.3-65.2a67 67 0 0 0-4.75-25c-8.06-22.1-26.74-33.33-44.8-44.19zM150 188.85c11.9 14.93 27 23.15 42.52 23.15a42.88 42.88 0 0 0 6.33-.47c32.37-4.76 52.54-44.26 45.92-90C242 102.3 234.6 84.39 224 71.11 212.12 56.21 197 48 181.49 48a42.88 42.88 0 0 0-6.33.47c-32.37 4.76-52.54 44.26-45.92 90 2.76 19.2 10.16 37.09 20.76 50.38zm163.16 22.68a42.88 42.88 0 0 0 6.33.47c15.53 0 30.62-8.22 42.52-23.15 10.59-13.29 17.95-31.18 20.75-50.4 6.62-45.72-13.55-85.22-45.92-90a42.88 42.88 0 0 0-6.33-.47C315 48 299.88 56.21 288 71.11c-10.6 13.28-18 31.19-20.76 50.44-6.62 45.72 13.55 85.22 45.92 89.98zM111.59 308.8l.14-.05c11.93-4.79 21.16-14.29 26.69-27.48 8.38-20 7.2-46.75-3.15-71.65C120.94 175.16 92.85 152 65.38 152a46.4 46.4 0 0 0-17 3.2l-.14.05c-11.9 4.75-21.13 14.29-26.66 27.48-8.38 20-7.2 46.75 3.15 71.65C39.06 288.84 67.15 312 94.62 312a46.4 46.4 0 0 0 16.97-3.2z"></path></svg>

================
File: public/assets/photo.svg
================
<svg xmlns="http://www.w3.org/2000/svg"   fill="#666666" viewBox="0 0 512 512" height="1em" width="1em"><path d="M457.6 140.2l-82.5-4-4.8-53.8c-1-11.3-11.1-19.2-22.9-18.3L51.5 88.4c-11.8 1-20.3 10.5-19.4 21.7l21.2 235.8c1 11.3 11.2 19.2 22.9 18.3l15-1.2-2.4 45.8c-.6 12.6 9.2 22.8 22.4 23.5L441.3 448c13.2.6 24.1-8.6 24.8-21.2L480 163.5c.6-12.5-9.3-22.7-22.4-23.3zm-354.9 5.3l-7.1 134.8L78.1 305 62 127v-.5-.5c1-5 4.4-9 9.6-9.4l261-21.4c5.2-.4 9.7 3 10.5 7.9 0 .2.3.2.3.4 0 .1.3.2.3.4l2.7 30.8-219-10.5c-13.2-.4-24.1 8.8-24.7 21.3zm334 236.9l-84.8-99.5-37.4 34.3-69.2-80.8-122.7 130.7L133 168v-.4c1-5.4 6.2-9.3 11.9-9l291.2 14c5.8.3 10.3 4.7 10.4 10.2 0 .2.3.3.3.5l-10.1 199.1z"/><path d="M384 256c17.6 0 32-14.4 32-32s-14.3-32-32-32c-17.6 0-32 14.3-32 32s14.3 32 32 32z"/></svg>

================
File: public/assets/upload.svg
================
<svg xmlns="http://www.w3.org/2000/svg" stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 384 512" height="1em" width="1em"><path d="M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm65.18 216.01H224v80c0 8.84-7.16 16-16 16h-32c-8.84 0-16-7.16-16-16v-80H94.82c-14.28 0-21.41-17.29-11.27-27.36l96.42-95.7c6.65-6.61 17.39-6.61 24.04 0l96.42 95.7c10.15 10.07 3.03 27.36-11.25 27.36zM377 105L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z"/></svg>

================
File: public/assets/wet.svg
================
<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M256 65c-65.3 0-124.4 10.69-166.36 27.5-20.99 8.4-37.64 18.3-48.6 28.7C30.09 131.5 25 141.8 25 152s5.09 20.5 16.04 30.8c10.96 10.4 27.61 20.3 48.6 28.7C131.6 228.3 190.7 239 256 239c65.3 0 124.4-10.7 166.4-27.5 20.9-8.4 37.6-18.3 48.6-28.7 10.9-10.3 16-20.6 16-30.8s-5.1-20.5-16-30.8c-11-10.4-27.7-20.3-48.6-28.7C380.4 75.69 321.3 65 256 65zm.1 13.53c51.3 0 97.8 6.57 132.1 17.57 17.2 5.5 31.4 12 41.9 20 10.6 7.9 18 18 18 29.9 0 11.9-7.4 22-18 29.9-10.5 8-24.7 14.5-41.9 20-34.3 11-80.8 17.6-132.1 17.6s-97.8-6.6-132.1-17.6c-17.2-5.5-31.43-12-41.95-20-10.51-7.9-17.95-18-17.95-29.9 0-11.9 7.44-22 17.95-29.9 10.52-8 24.75-14.5 41.95-20 34.3-11 80.8-17.57 132.1-17.57zm0 17.97c-49.8 0-94.8 6.6-126.7 16.7-15.9 5.1-28.5 11.2-36.49 17.2-8.01 6.1-10.81 11.3-10.81 15.6 0 4.3 2.8 9.5 10.81 15.6 7.99 6 20.59 12.1 36.49 17.2 31.9 10.1 76.9 16.7 126.7 16.7s94.8-6.6 126.7-16.7c15.9-5.1 28.5-11.2 36.5-17.2 8-6.1 10.8-11.3 10.8-15.6 0-4.3-2.8-9.5-10.8-15.6-8-6-20.6-12.1-36.5-17.2-31.9-10.1-76.9-16.7-126.7-16.7zM25 192.2V360c0 13.2 5.88 24.6 17.7 35.4 11.81 10.8 29.56 20.4 51.32 28.1C137.5 439 196.8 447 256 447c59.2 0 118.5-8 162-23.5 21.7-7.7 39.5-17.3 51.3-28.1 11.8-10.8 17.7-22.2 17.7-35.4V192.2c-1.2 1.3-2.4 2.5-3.7 3.7-13.3 12.6-31.8 23.4-54.3 32.3-44.8 18-105.8 28.8-173 28.8s-128.2-10.8-173.05-28.8c-22.45-8.9-40.94-19.7-54.27-32.3-1.28-1.2-2.5-2.4-3.68-3.7zM96 280l64.4 48.2c33.3-15.3 71.8-34.1 135.7-34.1 40 0 120 25.9 120 46 0 19.9-80 45.9-120 45.9-63.9 0-102.4-18.9-135.7-34.2L96 400z"></path></svg>

================
File: public/crud.js
================
const getFormData = () => {
    const formData = new FormData(itemForm);
    const data = Object.fromEntries(formData); 
    itemForm
      .querySelectorAll('input[type=checkbox]')
      .forEach(el => data[el.name] = el.checked ? true : false)      
    return data;
};

// The purpose of frontetnd validation is to give feedback to the user.
// this is different from backend validation (which is more about enforcing the rules.)
const validateItem = (data) => {
    const errors = [];  
    if (data.description.length < 20) errors.push('Description is too short.');  
    noticeArea.style.display = errors.length ? 'block' : 'none';
    noticeArea.innerHTML = errors.join(' ');
    return errors.length === 0;
};


const saveItem = async (data) => {
    console.log(data)
    const endpoint = data._id ? `/api/item/${data._id}` : '/api/item/';
    const options = {
        method: data._id ? "PUT" : "POST",
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify(data)
    }; 
    try {
        const response = await fetch(endpoint, options);
        const updatedItem = await response.json();
        renderItem(updatedItem); // Re-renderItem with updated data
    } catch (error) {
        console.log(error);
    }
};


const deleteItem = async (id) => {
    const endpoint = `/api/item/${id}`;
    const options = {method: "DELETE"}; 
    try {
        const response = await fetch(endpoint, options);
        const result = await response.json();
        document.querySelector(`[data-id="${id}"]`).remove(); // Remove from DOM
    } catch (error) {
        console.log(error);
    }
};

const editItem = (data) => { 
  
    Object.keys(data).forEach(field => { 
        const element = itemForm.elements[field];
        if (element) {  
            if (element.type=='checkbox') {
                element.checked = data[field];
            } else if (element.type == "date") { 
                element.value =  new Date(data[field]).toLocaleDateString('en-CA');
            } else{
                element.value = data[field];
            }
        }
    });

    formHeading.innerHTML = `Edit ${data.name}`;
};


const template = (data) => DOMPurify.sanitize(`
    <section class="image"> 
        <div class="frame">
            <img src="/assets/cat.svg" alt="${data.name}">
        </div>  
         <div class="calendar" style="${(data.birthDate) ? '' : 'display:none;' }">
                <div class="born"><img src="/assets/birthday.svg" /></div>
                <div class="birthMonth">${data.birthMonth }</div>
                <div class="birthDay">${data.birthDay }</div> 
                <div class="birthYear">${data.birthYear }</div>
            </div>
    </section>
    <section class="information">
        <header> 
            <h2 style="background: ${data.cssGradient} background-clip: text;   -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;">${data.name}</h2>
            <h3>${data.breed}</h3>
            
        </header>
        <main>
            <p>${data.description}</p>
            <div class="stats">
         <div class="stat">
          <span>Playfulness</span>
          <meter max="10" min="0" value="${data.playfulness}"></meter> 
        </div>
        <div class="stat">
          <span>Appetite</span>
          <meter max="10" min="0" value="${data.appetite}"></meter> 
        </div>
        </div>
        <section class="food" style="${(data.food) ? '' : 'display:none;' }">
            <span>Prefers</span> <img src="/assets/${data.food}.svg" /> <span>${data.food} food</span>
        </section>
        <section class="adoption">
             <img src="/assets/${data.isAdopted ? 'adopted.svg' : 'paw.svg' }" />  ${data.isAdopted ? 'Adopted' : 'Waiting for a home' }
        </section>
           
            
        </main>
        
        <div class="options"> 
            <button class="edit" popovertarget="formPopover" >Edit</button> 
            <button class="delete">Delete</button>
        </div>
    </section> 
`);

const renderItem = (data) => {

    data.birthMonth = new Date(data.birthDate).toLocaleString("en-CA", { month: 'short', timeZone: "UTC"  } ) 
    data.birthDay = new Date(data.birthDate).toLocaleString("en-CA", {  day: '2-digit', timeZone: "UTC"  } )
    data.birthYear = new Date(data.birthDate).toLocaleString("en-CA", { year: 'numeric', timeZone: "UTC"  } )

    data.cssGradient = `linear-gradient(90deg, ${data.primaryColor} 0%, ${data.secondaryColor} 100%);`

    const div = document.createElement('div');
    div.classList.add('item');
    div.setAttribute('data-id', data._id);
    div.innerHTML = template(data); 
    div.querySelector('.edit').onclick = () => editItem(data);
    div.querySelector('.delete').onclick = () => deleteItem(data._id); 
    const existingElement = document.querySelector(`[data-id="${data._id}"]`);
    existingElement ? content.replaceChild(div, existingElement) : content.prepend(div);
};



// Export functions for use in other modules
export { getFormData, validateItem, saveItem, renderItem, deleteItem };

================
File: public/form.css
================
form{ 
  display: flex;
  width: 75vw;
  height: 75vh;
  flex-direction:column;
}

form section{
  display: flex;
  flex-wrap:wrap;
  overflow-y:scroll;
  justify-content: center;
  gap: 1rem; 
  padding: 2rem;  
}

fieldset{
  display: flex;
  flex-direction: column;
  align-items: start;
  margin-bottom: 1rem;
  border: none;
}

fieldset:has(textarea){
  width: 100%;
}

legend{
  text-align: left;
}

textarea{
  padding: 1rem;
  align-self: stretch;
}

fieldset:has(button){
  width: 100%;
  flex-direction: row;
  gap: 2rem;
  justify-content: center;
}

fieldset:has(input[type=file]){  
  flex-direction: row; 
  justify-content: center;  
  align-items: center;
}
input[type=file]{
  display: none;
}

label[for="uploader"]{
   border: 0; 
  font-weight: 700;  
  background-color: #000;  
  padding: 0.5rem 1rem;
  border-radius: 1rem;
  color: white;
  cursor: pointer;
  display: flex;
  gap: 0.5rem;
}

label[for="uploader"] img{
  width: 1.2rem;
}
label[for="uploader"] span{
  font-size: 1.2rem;
  font-weight: 700;
}
fieldset:has(input[type=file]) .separator{
  color: #666;
  margin: 1rem;
}

img#imagePreview{
   width: 8rem;
}


fieldset:has(input[type=checkbox]){
  gap:0.5rem;
}

/* layout checkboxes and radio buttons horizontally */
label:has(input[type=radio]),
label:has(input[type=checkbox]){
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

/* make radio and checkbox elements a bit bigger*/
input[type=radio],
input[type=checkbox]{
  margin: 0;
  padding: 0;
  width: 1.25rem;
  height: 1.25rem; 
} 
 

/* Set accent colour for inputs. */
input {
  accent-color: black;
}

/* Style default padding for form elements */
input, select, option {
  padding: 0.5rem;
} 

/* Range slider doesn't need padding on the sides */
input[type=range] {
  padding: 0.5rem 0rem;
}
/* Color picker does not need padding at all */
input[type=color] {
  width: 108px;
  height: 36px;
  margin: 0;
  background: white;
  border: 1px solid #aaa;
  border-radius: 0.5rem;
  padding: 0.15rem 0.25rem;
}
    


/* drag and drop state */
form.ready{
  background: #85d049;
}


form #noticeArea{
  display: none;  
  background: #74252511;
    padding: 1rem 2rem;
    color: #742525;
    border-radius: 0.5rem;
    overflow: unset;
    margin-top: 1rem;

}
 
#formHeading{
  width: 100%
}

================
File: public/index.html
================
<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>CRUD</title>


  <link rel="icon" href="assets/cat.svg" type="image/svg+xml">
  

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Jost:wght@100..900&display=swap" rel="stylesheet">


  <script src="https://cdn.jsdelivr.net/npm/dompurify@3.1.7/dist/purify.min.js" integrity="sha256-ZAdXaZOlqhMD6vn++5Xlz8HAyAZFvTcX22cXJ+a1W5E=" crossorigin="anonymous"></script>
  


  
  <link href="style.css" rel="stylesheet" type="text/css" />
  
  <link href="form.css" rel="stylesheet" type="text/css" />
</head>

<body>
        <header>
          <h1> 
            <svg xmlns="http://www.w3.org/2000/svg" stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512">
              <use href="/assets/logo.svg#catIcon" /> 
            </svg> 
            <span>(cat), read, update, delete</span>
            
            <button id="add">Add a Cat</button>
          </h1>  
           
        </header>
  
        <div popover id="formPopover">

          <form id="itemForm">
 
            <h2 id="formHeading">Add a Cat</h2>

            <section>
          <input type="hidden" name="_id">

            <fieldset>
              <label for="name">Cat Name</label>
              <input
              required
                type="text"
                name="name"
                id="name"
                placeholder="e.g. Sofia"
                autocomplete="off"
              />
            </fieldset>
    
            <fieldset>
              <label for="birthDate">Birth Date</label>
              <input type="date" name="birthDate" id="birthDate" />
            </fieldset>
    
            <fieldset>
              <label for="primaryColor">Primary Color</label>
              <input
                type="color"
                name="primaryColor"
                id="primaryColor"
                value="#5f5854"
              />
            </fieldset>
    
            <fieldset>
              <label for="secondaryColor">Secondary Color</label>
              <input
                type="color"
                name="secondaryColor"
                id="secondaryColor"
                value="#c4c8cf"
              />
            </fieldset>
    
            <fieldset>
              <label for="breed">Breed</label>
              <select name="breed" id="breed">
                <option value="" disabled selected>Select a Breed</option>
                <optgroup label="Domestic">
                  <option value="Abyssinian">Abyssinian</option>
                  <option value="Bengal">Bengal</option>
                  <option value="Burmese">Burmese</option>
                  <option value="Chartreux">Chartreux</option>
                  <option value="Maine Coon">Maine Coon</option>
                  <option value="Persian">Persian</option>
                  <option value="Ragdoll">Ragdoll</option>
                  <option value="Shorthair">Shorthair</option>
                  <option value="Siamese">Siamese</option>
                  <option value="Sphynx">Sphynx</option>
                  <option value="Ragamuffin">Ragamuffin</option>
                </optgroup>
                <optgroup label="Exotic">
                  <option value="Tiger">Tiger</option>
                  <option value="Lion">Lion</option>
                  <option value="Panther">Panther</option>
                  <option value="Jaguar">Jaguar</option>
                  <option value="Lynx">Lynx</option>
                </optgroup>
                <optgroup label="Other">
                  <option value="Other">Other</option>
                  <option value="Unknown">Unknown</option>
                </optgroup>
              </select>
            </fieldset>

    
            <fieldset>
              <label for="description">Description</label>
              <small>Provide a brief biography.</small>
              <textarea name="description" id="description" rows="6" cols="30"></textarea
              >
            </fieldset>
    
            <fieldset>
              <label for="playfulness">Playfulness</label>
              <small>Chill or chaotic?</small>
              <input type="range" min="0" max="10" name="playfulness" id="playfulness" />
            </fieldset>
    
            <fieldset>
              <label for="appetite">Appetite</label>
              <small>Is this a hungry Cat?</small>
              <input type="range" min="0" max="10" name="appetite" id="appetite" />
            </fieldset> 
    
            <fieldset>
              <legend>Food</legend> 
              <small>Any Preferences?</small>  
              <label for="wet">
                <input type="radio" id="wet" name="food" value="wet" />
                <span>Wet</span>
              </label>
              <label for="dry">
                <input type="radio" id="dry" name="food" value="dry" />
                <span>Dry</span>
              </label>
              <label for="mixed">
                <input type="radio" id="mixed" name="food" value="mixed" />
                <span>Mixed</span>
              </label>
            </fieldset>
    
            <fieldset>
              <legend>Rescue Status</legend>
              <label for="isAdopted">
                <input type="checkbox" name="isAdopted" id="isAdopted" />
                <span>Adopted</span>
              </label
              >
            </fieldset>
    
            <fieldset>
              <label for="microchip">Microchip Number</label>
              <small>It's usually nine digits</small>
              <input
                required 
                type="number"
                name="microchip"
                step="1"
                max="999999999"
                id="microchip"
                placeholder="e.g. 123456789" 
              />
            </fieldset>
     


            </section>
            
          <section id="noticeArea"></section>
          
          <fieldset> 
            <button class="save" popovertarget="formPopover">Save</button>
            <button type="button" class="cancel">Cancel</button> 
          </fieldset>

          </form>
 
      </div>
 
        
 
        <main id="content">       
        </main>
         
  
      <footer>
        <p>This demo illustrates a full stack <a target="_blank" href="https://developer.mozilla.org/en-US/docs/Glossary/CRUD">CRUD</a> (Create Read Update Delete) interface: Frontend (User Interface) and Backend (NodeJS API).  Cat data is stored in MongoDB.</p><p>Created by <a  target="_blank" href="https://nsitu.ca">Harold Sikkema</a> in the context of Systems Design in the Interaction Design program at Sheridan College. Icons via <a target="_blank" href="https://react-icons.github.io/">React Icons</a>. Note that at time of creation, <a href="https://caniuse.com/?search=popover">Popover</a> is widely but not yet universally supported. </p>
      </footer> 
   
	<script type="module" src="script.js"></script>
  
  </body>
  
</html>

================
File: public/script.js
================
// import helper functions for crud frontend user experience
import { getFormData, validateItem, saveItem, renderItem } from './crud.js';

// function to fetch items and render them
const getItems = async () => {
  try { 
      const response = await fetch('/api/items');
      const items = await response.json(); 
      content.innerHTML = ''; // clear away any previous items
      content.classList.remove('loading')
      items.forEach(renderItem );
  } catch (error) {
      console.log(error);
  }
};

// Listen for Form submit and save the data 
itemForm.addEventListener('submit', (event) => {
  event.preventDefault();
  const data = getFormData(event.target);
  if (validateItem(data)) {
    saveItem(data).then(() => { 
      itemForm.reset()
      formPopover.hidePopover()
    }); 
  }
});
 

// Function to reset the form.
// NOTE: this is augmenting the default reset behaviour which already blanks out most form elements.
// Here we also do a visual / narrative reset and blank out  hidden fields 
itemForm.addEventListener('reset', (event) => { 
  formHeading.innerHTML = 'Add a Cat'
  noticeArea.style.display = 'none';
  noticeArea.innerHTML = '';
  event.currentTarget.elements['_id'].value = ''
})

// Reset the form when we click the add or cancel buttons
// NOTE: popover behaviours are handled here explicitly 
// this helps to create a consistent experience between different browsers.
document.querySelector('button#add').addEventListener('click', event => {
  itemForm.reset()  
  formPopover.showPopover();
})  

document.querySelector('form button.cancel').addEventListener('click', event => {
  itemForm.reset()  
  formPopover.hidePopover();  // Explicitly hide popover
})  

// fetch the initial list of items
getItems();

================
File: public/style.css
================
html, body {
  height: 100%;
  width: 100%; 
  margin: 0;
  min-height: 100vh;
  background: #3e6379;
}

html, body,  button, input, textarea{
  font-family: "Jost",sans-serif; 
  font-size: 1rem;
  font-weight: 300;  
  font-style: normal;
}

body{
  display: flex;
  flex-direction: column;
  align-items: center;
}

h1, h2, h3 { 
  font-weight: 700;   
  text-align: center;
} 

body > header{
 margin: 0 auto; 
 text-align: center;
  color: #fff;
}

header h1 {
  font-size: 2rem; 
  text-align: center;
  display: flex;
  gap:2rem;
  align-items: center;
}

header h1 span{
  line-height: 2rem;
  max-width: 50vw;
}

header h1 svg{   
  width: 4rem;
}


button{
 border: 0; 
  font-weight: 700;  
  background-color: #000;  
  padding: 0.5rem 1rem;
  border-radius: 1rem;
  color: white;
  cursor: pointer;
} 
 



#content{  
  gap: 3rem; 
  margin: 1rem; 
  display: flex;
  flex-direction: column;
  gap: 2rem;
}


#content.loading{
  background-image: url('assets/load.svg');
  background-repeat: no-repeat;
  background-position: center center;
}



/* CSS for item Cards */
.item{
  border-radius: 1rem; 
  background: #eee;
  display:grid;
  overflow: hidden;
  grid-template-columns: 1fr;
  width: 100%;
}

.item section{
  display:flex;
  flex-direction: column;
}
.item .image {
  position: relative;
}
.item .image button{
  background: none;
  position: absolute;
  padding: 0;
}
.item .image button img{
  width: 2rem;
  margin: 1rem;
  opacity: 0.5;
}
.item .image button:hover img{
  opacity: 1;
}

.item .information{
  padding: 1rem;
}

.frame {
  width: 100%;                /* Make the frame square to fill the entire card */
  aspect-ratio: 1 / 1;        /* See also: https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio   */
  overflow: hidden;           /* Prevent anything from spilling over beyond the square. */
}

.frame img {
  object-fit: cover;          /* See also https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit */
  width: 100%;                /* set the image to 100% of the square container for both width and hight */
  height: 100%;
}

/* change the layout of items depending on the screen size */
@media (min-width: 750px) {
  #content{ 
    margin: 2rem;  
    
    max-width: 1200px; 
  } 
  .frame {
    width: 100%;                /* Make the square fill the entire card */
    aspect-ratio: auto;
    height: 100%;      
    overflow: hidden;           /* Prevent anything from spilling over beyond the square. */
  }
  
  .item { 
    grid-template-columns: 1fr 1fr;
    width: auto;
  }  
/* 
  .item { 
    grid-template-columns: 1fr 2fr;
    width: auto;
  }   */
}

/* change the layout of items depending on the screen size */
@media (min-width: 1200px) {
  #content{
    /* grid-template-columns: 1fr 1fr; */
    margin: 3rem; 
    
  } 

  /*if the screen is sufficiently large,
   we can force the image and the info to  both be  square */
  .frame{
    aspect-ratio: 1 / 1;   
    height: auto;
  }

  .information{
    aspect-ratio: 1 / 1;   
    height: auto;
  }

  /* .item { 
    grid-template-columns: 1fr 1fr;
    width: auto;
  }   */
}

/* Set accent colour for meter. */ 

/* Style the background bar of the meter */
meter::-webkit-meter-bar {
  background: #fff; /* background color of the meter */
}

/* Style for the 'optimum' range (e.g., the highest value range) */
meter::-webkit-meter-optimum-value {
  background: #000;
}

/* Style for the 'sub-optimum' range (e.g., medium value range) */
meter::-webkit-meter-suboptimum-value {
  background: #000;
}

/* Style for the 'even-less-good' range (e.g., low value range) */
meter::-webkit-meter-even-less-good-value {
  background: #000;
}


.item header{ 
  background: transparent; 
  margin: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.item main{ 
  background: transparent;
  text-align: center;
  
  overflow-y: auto;
  flex-shrink: 1;
    flex-basis: 30%;
    flex-grow: 1;
  border-radius: 1rem;
} 

.item header h2{
  font-size: 3rem;
  line-height: 3rem;
  margin-bottom: 0;
  padding-bottom: 0.25rem; /* allows descenders to appear despite line height.*/
}
.item svg{
  height: 1em;
  width: 1em;
  margin-bottom: -0.5rem
}
.item h3{
  margin-top: 0;
  font-size: 1rem;
  color: #666;
}
.item .stats{
  width: 100%;
  display: flex;
  flex-direction: column; 
  text-align: center;
  justify-content: center;   
}
.stats .stat{ 
  display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 1.5rem;
    font-weight: 300;
    padding: 0 3rem 0 1rem;

} 
.stat span{
  width: 10rem;
  text-align: right;
}
.stats meter{
  flex-grow: 1;
  height: 2rem;
}
/* styling for the calendar */
.calendar{
  position: absolute;
  bottom: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  width: 4rem;
  text-align: center;
  margin: 1rem 0 1rem 1rem; 
  background: #3b3b3b66; 
  
  color: #fff;
  
  border-radius: 1rem ;
}
.calendar .born{
  margin: 0;  
  padding-top: 0.5rem;
  border-radius: 1rem 1rem 0 0;
}
.calendar .born img{
  width: 1.5rem;
}
.birthYear{ 
  border-top: 1px solid white;
  font-weight: 700;   
  padding-bottom: 0.5rem;
  border-radius: 0 0 1rem 1rem ;
}
.birthMonth{ 
  border-top: 1px solid white;
  text-transform: uppercase;
  background: #3b3b3b66;  
  font-weight: 700;
}
.birthDay{ 
  border-top: 1px solid white;
  background: #3b3b3bbb;  
  font-size: 2rem;
  font-weight: 700;
} 
.badges{
  display: flex;
  justify-content: center;
  margin: 2rem 0;
}
.badge{  
  background-image: url(assets/heart.svg);
  background-repeat: no-repeat;
  background-position: 1rem center;
  padding: 0.5rem 1rem 0.5rem 2.5rem;
  border-radius: 1rem; 
  color: white;
}
.success{
  background-color: #999;
}
.alert{
  background-color: darkorange; 
}

.item .options{
  /* center the edit and delete buttons */
  text-align: center;
  margin: auto 0 0 0;
  padding: 2rem 0 1rem 0;
} 

.item .food{
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}
.item .food img{
  width: 4rem;
}
.item .food span{
  font-size: 1.5rem;
  font-weight: 300;
}

.item .adoption{
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  
  font-size: 1.5rem;
  font-weight: 300;
}

.item .adoption img{
  width: 3rem;
}

[popover] {
  padding: 2rem 2rem 3rem;
  border-radius: 1rem;
  border: none;
  filter: drop-shadow(0 0 2rem rgba(0, 0, 0, 0.3)); 
}

[popover]::backdrop {
  backdrop-filter: blur(3px);
}



[popover] .imagePopover{
  position: relative;
}

[popover] .imagePopover img{
  max-height: 80vh;
}
 

[popover] .imagePopover button{
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
}
 

/* Footer */

footer {
  background: #263d4a;
  text-align: center;
  padding: 3rem;  
  color: #fff;
  align-self: stretch;
}
footer a{ 
  color: #fff;
}
